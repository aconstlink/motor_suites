config render
{
    vertex_shader
    {
        in vec3_t pos : position ;
        in vec2_t tx : texcoord0 ;

        out vec2_t tx : texcoord0 ;
        out vec4_t pos : position ;

        vec3_t do_something( vec3_t p )
        {
            return p + vec3_t(0.1, -0.1, 0.0) ;
        }

        void main()
        {
            vec3_t p = msl.math.xyz( do_something( in.pos ) ) ;
            out.tx = in.tx ;
            out.pos = msl.math.to_vec4( p ) ; 
        }
    }

    pixel_shader  
    {
        tex2d_t u_tex ;

        in vec2_t tx : texcoord0 ;
        out vec4_t color : color ;

        vec4_t u_color ;

        void main()
        {
            out.color = texture( u_tex, in.tx )  ' u_color  ;
        }
    } 
}