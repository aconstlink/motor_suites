config render
{
    vertex_shader
    {
        in vec3_t pos : position ;
        in vec2_t tx : texcoord0 ;

        out vec2_t tx : texcoord0 ;
        out vec4_t pos : position ;

        void main()
        {
            vec3_t p = in.pos ;
            out.tx = in.tx ;
            out.pos = vec4_t( p, 1.0 ) ;  
        }
    }

    pixel_shader  
    {
        tex2d_t u_tex ;

        in vec2_t tx : texcoord0 ;
        out vec4_t color : color ;

        vec4_t u_color ;

        float_t u_mult ;
        float_t u_layer ;

        void main()
        {
            // white output
            out.color = vec4_t( 1.0, 1.0, 1.0, 1.0 ) ;

            // test noise_1d( vec2 )
            out.color = vec4_t( noise_1d( in.tx'5.0+vec2_t(2.0*u_mult,0.0) ), 0.0, 0.0, 1.0 ) ; 

            // test noise_1d( vec3 )
            vec3_t p = vec3_t( in.tx ' 5.0 + vec2_t(2.0*u_mult,0.0), u_layer ) ;
            out.color = vec4_t( noise_1d( p ), 0.0, 0.0, 1.0 ) ; 
        }
    } 
}